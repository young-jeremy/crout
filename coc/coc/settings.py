"""
Django settings for coc project.

Generated by 'django-admin startproject' using Django 5.1.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

import json
import os
from pathlib import Path

from google.oauth2 import service_account

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-pxrh=7@@zb#5-6+v88o$x5)p7=64719^p!*5i@limgjt-$su(6'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # user defined applications
    'dashboard',
    'accounts',
    'allauth.mfa',

    # C
    'crispy_forms',
    'comments',
    'blog',

    #D
    'django_daraja',

    # H
    'haystack',

    'home',
    'crispy_bootstrap5',

    # N
    'notifications',

    # O

    #P

    'payments',
    'channels',
    'videos',
    'django.contrib.sites',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    # Add providers you need (e.g., Google, Facebook)
    'allauth.socialaccount.providers.google',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.contrib.sites.middleware.CurrentSiteMiddleware',
    'allauth.account.middleware.AccountMiddleware',  # Add this line

]

ROOT_URLCONF = 'coc.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'coc.wsgi.application'



SITE_ID = 1  # Required by django-allauth

# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

AUTH_USER_MODEL='accounts.User'


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/
STATIC_URL = 'static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_URL = '/media/'
STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'



AUTHENTICATION_BACKENDS = [
    #'social_core.backends.facebook.FacebookOAuth2',
    'django.contrib.auth.backends.ModelBackend',
    'allauth.account.auth_backends.AuthenticationBackend',  # Allauth
]



LOGIN_URL = 'account_login'
LOGIN_REDIRECT_URL = 'videos:category_list'
LOGOUT_URL = 'accounts:logout'
LOGOUT_REDIRECT_URL = 'account_login'
SOCIAL_AUTH_FACEBOOK_KEY = "#############"
SOCIAL_AUTH_FACEBOOK_SECRET = "############"


#for extra info
SOCIAL_AUTH_FACEBOOK_SCOPE = [
    'email',
]
ACCOUNT_EMAIL_REQUIRED = True  # Require email during signup
ACCOUNT_EMAIL_VERIFICATION = 'mandatory'  # Require email verification
ACCOUNT_AUTHENTICATED_LOGIN_REDIRECTS = True  # Redirect after login
ACCOUNT_USERNAME_REQUIRED = False  # Allow users to log in with email only
ACCOUNT_AUTHENTICATION_METHOD = 'email'
SOCIALACCOUNT_EMAIL_AUTHENTICATION='True'
SOCIALACCOUNT_AUTO_SIGNUP='True'
SOCIALACCOUNT_QUERY_EMAIL = True  # Get email address from Google
SOCIALACCOUNT_ADAPTER = 'accounts.adapters.MySocialAccountAdapter'


EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = 'jeremymayaka96@gmail.com'
EMAIL_HOST_PASSWORD = 'brvn zwbn lrfa lsig'  # Use an app password if 2FA is enabled


# EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'


# Google Cloud JSON key as a dictionary
GOOGLE_CLOUD_CREDENTIALS = {
    "type": "service_account",
    "project_id": "christian-outreach-church",
    "private_key_id": "7c647e72714164d305021dfe957cd6ee432d1f3f",
    "private_key": "-----BEGIN PRIVATE KEY-----\nMIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQDH6IE8x5X1e6y3\nxGjnHeP79dAORqHe07WFh9Bb38IJirS+O2wAQ7JrMImkqyxThZ+nWxxcM+E+9sLo\nHVE8AUwm90hoOA//U56mM1kmOA4NbAgg7okGeMlr3KGxvxi/AbhXJNFNM68QsK58\nInRfOj//nLIQUsEIkFiLHf+I4HSBxerh2huy8qVREHfPBvjutPodyHtuXKPNl9hY\n3pOhZK0xwNAfMkJ1mgd/tXJv/ibuCY4oMN/h2WbT+M0szNGYUS2W4dScfj0AS3nk\n5gw8CsF1Sqvw21lAgnbSCJWDXbgfltLBJBuvyP8vO5eb0iAgp1FGqr2+Jj6TZQWv\nD72TyNh7AgMBAAECggEAGFiXIL1X5Ik23DyV4AvSX7WsrIhqn1YeRdBoDkBeg8X6\nRC69dPzJpmdHZCAaqmNcMcgVWJ9S39WyoA0t/wZTbW1xSowFWr2m1SvswAxUncrZ\n5JTYaErekP3STXDuBRkjB63qtaHFQN2bqm+Rx6Uy9SDyyK0jaDUYK30wSU24srMd\n5g32AZnNLHJxYoGlBLlRkU2AC69+a0DwnshE1noDpYPAY4XS1cdcn7e+IOz7THFh\nheR465eyZYFiio1Sk2xOhbtHNLnKBr0CahVd0Ck/BVTgkv860tzIjkqQH3V/9SP4\nEy61nOpkxbBtN0rMV1ihdlxoSxXXRZpnvuMMW9B98QKBgQDH/tCO+mV2/FPzs1SJ\nZR4WOPRwEUX4JN9eD4cllKe1sIKH74vncm0n+X5Qn7YfXdIZmD41RnrarkiCaC0L\nC3qQhrY9GEe7QOCZkk+sn12W7yqEieWsj60xYsmbk3ipqF8l8y3ZXiX+98yTBxjZ\naLbh+svIX1Qutsi8sAZl1/vGSwKBgQD/43FW+ojDEScB+AeTZo25Q23L+qbTFhka\n7D/yntc7Su3PnEtVZWmDMjvBdRdJIBh5ByK8T006TbEwSvid77XynqqLHqJZH/nD\nBRZSF4TDSmw8o6qUIpCOEGo3DcB6hOIoirWWiqoVTXpweLDBmydNw1n1PglUkQGI\nOJmnDrOYkQKBgEex+4YmEZW0I0xr71RJ4Z1J0acTKigo38JSgrpgLjceDc05fMf9\n50+7SyMP/jQEaDswrqxeldArRmcpfWxGMyv4fwAr4hsoyNuE7fcOMnjXSEC3RpSz\n9PyNU4ToOwtnBqUOJlOUQr7Cip3yn1/hAB7Gz6MHOaB9ejzaRZDg+qs9AoGAYO3N\nzA3A6ms/5G4IqJwrSScymxbKRKFVRy6Alq32h549cOwaWTG+AxVvLzvkYy3GN2ot\njTlY3qH5YXq0rFbWDB5wKZykELCdEnOF3fjMsJEraNjyT4S8TyQGp+4MoBxf8s2A\nNZM3FDSyEZKWGfBktf8uv0gNjrwS4X/XLEHUZBECgYEAxINtcK+/p65/neXu1Jaz\nG8SrndHeUh80zCr32q1ih5HvTCZzbRdnArzKmNKnmaAbx9OUiTgL/lzs0i5QVTLM\nB764tL4w5CGzSAmPmtGa+zBjrzUUlBZDUUqQAhasxxRWaZMlTGWvVl5Ua3L95p1v\nJvnKapoqoxysGI1JmWqQmeA=\n-----END PRIVATE KEY-----\n",
    "client_email": "christian-outreach-church@christian-outreach-church.iam.gserviceaccount.com",
    "client_id": "105589791452995812299",
    "auth_uri": "https://accounts.google.com/o/oauth2/auth",
    "token_uri": "https://oauth2.googleapis.com/token",
    "auth_provider_x509_cert_url": "https://www.googleapis.com/oauth2/v1/certs",
    "client_x509_cert_url": "https://www.googleapis.com/robot/v1/metadata/x509/christian-outreach-church%40christian-outreach-church.iam.gserviceaccount.com",
    "universe_domain": "googleapis.com"
}

# Convert the dictionary to a JSON string and create credentials
GOOGLE_APPLICATION_CREDENTIALS = json.dumps(GOOGLE_CLOUD_CREDENTIALS)

# Create the credentials object from the above JSON string
credentials = service_account.Credentials.from_service_account_info(
    json.loads(GOOGLE_APPLICATION_CREDENTIALS)
)

# Optionally, add this to settings for easier reference


TWILIO_ACCOUNT_SID = 'your_account_sid'
TWILIO_AUTH_TOKEN = 'your_auth_token'
TWILIO_PHONE_NUMBER = 'your_twilio_phone_number'


CRISPY_TEMPLATE_PACK = 'bootstrap5'



MFA_FORMS = {
    'authenticate': 'allauth.mfa.base.forms.AuthenticateForm',
    'reauthenticate': 'allauth.mfa.base.forms.AuthenticateForm',
    'activate_totp': 'allauth.mfa.totp.forms.ActivateTOTPForm',
    'deactivate_totp': 'allauth.mfa.totp.forms.DeactivateTOTPForm',
    'generate_recovery_codes': 'allauth.mfa.recovery_codes.forms.GenerateRecoveryCodesForm',
}


from django.contrib.messages import constants as message_constants

MESSAGE_TAGS = {
    message_constants.DEBUG: 'secondary',
    message_constants.INFO: 'info',
    message_constants.SUCCESS: 'success',
    message_constants.WARNING: 'warning',
    message_constants.ERROR: 'danger',
}


import logging

logging.basicConfig(
    level=logging.DEBUG,
    handlers=[logging.StreamHandler()],
    format='%(asctime)s %(levelname)s %(message)s',
)


HAYSTACK_CONNECTIONS = {
    'default': {
        'ENGINE': 'haystack.backends.whoosh_backend.WhooshEngine',
        'PATH': os.path.join(BASE_DIR, 'whoosh_index'),  # Directory to store Whoosh index files
    },
}


FIRE_BASE_KEY = {
  "type": "service_account",
  "project_id": "christian-outreach-churc-6eed3",
  "private_key_id": "70fe94d44aea44d399a2fd8c3551043fadc73279",
  "private_key": "-----BEGIN PRIVATE KEY-----\nMIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQCyuisAd818ou2x\nffbnITwl/7QzF6fZmQuOALyp1JPBfjZ1QnlSAfLGQEfNGW21nj0s0Y7QdznP/WWa\n7s0OSXvhrkpajS6SGTfFMhbTZxhrNOGo8HooJ0CV8Pr6q18BmfbgjQZKZjovMB7X\ngNzEFPpn3FoPblrGxhfDAtJ4CSBUQXD2UzwVEg+RQpst3Mh71BspEKm6Tck77gQl\nMdS9/C4LA6u8wsc1gahoSxwy+YjhD1XRmCkMjsWpYXbZfnby+v5PmLyKFQWE00ok\nOpMNJLRNZF5WQvn+tw2mXhvq7cPHrEJB+u79o6LdCJmwexSJXGysCYdjHvpYGERA\npmmw0aslAgMBAAECggEALg3h2c+FMEotlLCASGOcg7Alx4qfcmdI/nD7LIn9/vye\nXM3hxDuDSwmyVsvoJMYfPmbLdbVbPNivb2J8jWNrHCbUuwupRfVglRxInHXy6WEp\niuZYm/MtZdXAXop9Q0TgxFEin1ZDRPiR4fcvLAm50ryJqnNFyfWuls4p3MuBPKRn\nL2M8gyJIODF30iT5w3jmH19XAexQzgrFX9R9sRO7O88bvmET+/VfYwUpQP22puT/\nJhbhiQJWWPfvMrLQKcIZ8TZhZ3JNyhc9keIECl4H6UaOiPGaAoXxZRQsPh/0/ndw\nv2O9SUVrPUPZSTAjT8gYMlZjYKtuMGqW1d0W5x9kCwKBgQDyx2YYr/xP7ZJ1Iyq2\n5Sg/Hf0pXy1mY5OhDDMhE93mXQenzB4dFgV11dYi1+R1XdAA0riNeSISMdHZsyNJ\nz7VfMjuK8GKd4Atf8czStIhL7Y3kIzBfxhJ0cOTD9d+VXJCIz8tvzPzPIp0x34Sg\nroWXzG+cftlOUNLUCax9zesCJwKBgQC8ddG5dvnR8ccNyRMiUzXvZbp5PBkyfVgR\nqzT2sIwDJvEN9dxUuyJAzPKfv2+z9oXYFy5CUBzE4VhD683GIV2P90l2XWfk491/\nv2RsDES5F5b+ZRDA83MknK0pBSDubszwaHf+Jc9NQ4pMkTB5Y58dTBn8fZZIaZTm\nE+oPmRoT0wKBgQCQ6D1jLN+PoYCSVBwxsFO2YKLzp7CEdZjvPkXiT2ZaElr4Z5ft\nynAV5j167JubBhSZ+SxYnN2eOIhFxWuhqc1a9bOeeV6TVt/TM5MKjODxWOghLHO6\nJpJrV9rjsAT0tJw8XLLTl2mqBMIIu54A/koU0dwob3orCYjdMKz5JghIbwKBgE3X\n5J7U0++yDGRXT7333OlbfaCiAE5ok74Il8Hlvo92wE7h5PZirY1Smkz9x+fvxe0x\n9fuSF7AC3HCBr+dM1NaocAGiJ03WCSHBLnuqvaAubEH8AOWSKVdQF/4/jhCuV5xd\nqmKhv3TMlw11Uy5wxcJWMs2mGjMi2UwHocB7ntfdAoGAPwWxLTNJeqOKLHdWZ8Ce\n/yRJsOro8ScRyUnUhkE05jGWOZ1j+OJI0Sgvwb+8OUKMXpmE8OmrbPetDjzm5xqB\n+o5sgdFnl8zCOU8zV8/4v8HziCzx6qMhMxia+iul8lfUVMhQpKn3W0qsW3bEPITC\nhMQt2R7pq6hb0DhRwGDhYSw=\n-----END PRIVATE KEY-----\n",
  "client_email": "firebase-adminsdk-y0pkc@christian-outreach-churc-6eed3.iam.gserviceaccount.com",
  "client_id": "114715230490591437850",
  "auth_uri": "https://accounts.google.com/o/oauth2/auth",
  "token_uri": "https://oauth2.googleapis.com/token",
  "auth_provider_x509_cert_url": "https://www.googleapis.com/oauth2/v1/certs",
  "client_x509_cert_url": "https://www.googleapis.com/robot/v1/metadata/x509/firebase-adminsdk-y0pkc%40christian-outreach-churc-6eed3.iam.gserviceaccount.com",
  "universe_domain": "googleapis.com"
}



# Initialize environment variables
# settings.py
MPESA_ENVIRONMENT = 'sandbox'
MPESA_CONSUMER_KEY = "nNfdvPlAm2iH2fKnrFqOyMdmpoFX99VaICdB4mDrPDZjzD06"
MPESA_CONSUMER_SECRET = "oXeNhIHMtAmoNMWDSGnTEFPOGCnnF6plVtAmfdGHCRyPjmaELymikwmk6H2k7Qmh"
MPESA_EXPRESS_SHORTCODE = "174379"  # Default test shortcode
MPESA_PASSKEY = "bfb279f9aa9bdbcf158e97dd71a467cd2e0c893059b10f78e6b72ada1ed2c919"  # Ensure you replace this with your actual passkey
MPESA_BASE_URL = "https://sandbox.safaricom.co.ke"  # Use live URL for production
CALLBACK_URL = "https://http://127.0.0.1:8000/payments/callback/"
INITIATOR_PASSWORD = 'MTc0Mzc5YmZiMjc5ZjlhYTliZGJjZjE1OGU5N2RkNzFhNDY3Y2QyZTBjODkzMDU5YjEwZjc4ZTZiNzJhZGExZWQyYzkxOTIwMjQxMTEyMjAwMzQ4'


SOCIAL_AUTH_PIPELINE = (
    'social_core.pipeline.social_auth.social_details',
    'social_core.pipeline.social_auth.social_uid',
    'social_core.pipeline.social_auth.auth_allowed',
    'social_core.pipeline.social_auth.social_user',
    'social_core.pipeline.user.get_username',
    'social_core.pipeline.user.create_user',
    'accounts.pipeline.save_google_profile',  # Custom function
    'social_core.pipeline.social_auth.associate_user',
    'social_core.pipeline.social_auth.load_extra_data',
    'social_core.pipeline.user.user_details',
)

SOCIAL_AUTH_FACEBOOK_SCOPE = ['email']
SOCIAL_AUTH_FACEBOOK_PROFILE_EXTRA_PARAMS = {
    'fields': 'id, name, email'
}
SOCIAL_AUTH_USER_FIELDS = ['email', 'first_name', 'username', 'password']
SOCIAL_AUTH_GOOGLE_OAUTH2_SCOPE = [
    'https://www.googleapis.com/auth/userinfo.email',
    'https://www.googleapis.com/auth/userinfo.profile',
]

SESSION_COOKIE_AGE = 3600  # Session expires after 1 hour (3600 seconds)
