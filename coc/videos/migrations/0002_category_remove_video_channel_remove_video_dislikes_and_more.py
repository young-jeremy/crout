# Generated by Django 5.1.2 on 2024-11-07 21:36

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('videos', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.RemoveField(
            model_name='video',
            name='channel',
        ),
        migrations.RemoveField(
            model_name='video',
            name='dislikes',
        ),
        migrations.RemoveField(
            model_name='video',
            name='like',
        ),
        migrations.RemoveField(
            model_name='video',
            name='owner',
        ),
        migrations.RemoveField(
            model_name='watchedvideo',
            name='video',
        ),
        migrations.RemoveField(
            model_name='watchedvideo',
            name='user',
        ),
        migrations.AlterUniqueTogether(
            name='videolikes',
            unique_together=set(),
        ),
        migrations.AddField(
            model_name='comment',
            name='dislikes',
            field=models.ManyToManyField(related_name='disliked_comments', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='comment',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AlterField(
            model_name='comment',
            name='parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='videos.comment', validators=[django.core.validators.MinLengthValidator(150)]),
        ),
        migrations.AlterField(
            model_name='comment',
            name='text',
            field=models.TextField(blank=True, null=True, validators=[django.core.validators.MinLengthValidator(150)]),
        ),
        migrations.AlterField(
            model_name='comment',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Content',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('video_url', models.URLField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('thumbnail', models.ImageField(default='static/imag/sa.jpg', upload_to='')),
                ('audience', models.BooleanField(default=False)),
                ('path', models.FileField(null=True, upload_to='videos/', verbose_name='')),
                ('recording_date_and_location', models.DateTimeField(blank=True, null=True)),
                ('language_and_captions_certification', models.BooleanField(default=False)),
                ('license', models.BooleanField(default=False)),
                ('is_approved', models.BooleanField(default=False)),
                ('keywords', models.CharField(blank=True, max_length=100, null=True)),
                ('status', models.CharField(blank=True, choices=[('PENDING', 'pending'), ('APPROVED', 'approved'), ('REJECTED', 'rejected')], default='PENDING', max_length=100, null=True)),
                ('privacy', models.CharField(choices=[('PUBLIC', 'public'), ('PRIVATE', 'private'), ('COMMUNITY', 'community'), ('MADE_FOR_KIDS', 'made_for_kids')], default='PUBLIC', max_length=100)),
                ('is_blocked', models.BooleanField(default=False)),
                ('duration', models.IntegerField(default=0)),
                ('shares', models.IntegerField(default=0)),
                ('promoted', models.BooleanField(default=False)),
                ('url', models.URLField(default='https://example.com')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contents', to='videos.category')),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('views', models.ManyToManyField(blank=True, related_name='post_views', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AlterField(
            model_name='comment',
            name='video',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='videos.content'),
        ),
        migrations.AlterField(
            model_name='favoritevideo',
            name='video',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='videos.content'),
        ),
        migrations.AlterField(
            model_name='likedvideo',
            name='video',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='videos.content'),
        ),
        migrations.AlterField(
            model_name='moderationrequest',
            name='video',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='videos.content'),
        ),
        migrations.AlterField(
            model_name='playlist',
            name='videos',
            field=models.ManyToManyField(to='videos.content'),
        ),
        migrations.AlterField(
            model_name='share',
            name='video',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='videos.content'),
        ),
        migrations.AlterField(
            model_name='videohistory',
            name='video',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='videos.content'),
        ),
        migrations.AlterField(
            model_name='videolikes',
            name='video',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='videos.content'),
        ),
        migrations.AlterField(
            model_name='videoview',
            name='video',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='videos.content'),
        ),
        migrations.AlterField(
            model_name='watchlater',
            name='video',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='videos.content'),
        ),
        migrations.CreateModel(
            name='Subscribe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subscribers', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.DeleteModel(
            name='Channel',
        ),
        migrations.DeleteModel(
            name='WatchedVideo',
        ),
        migrations.DeleteModel(
            name='Video',
        ),
    ]
